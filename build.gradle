/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id "org.sonarqube" version "2.7.1"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    runtime group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.7'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-all
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.13.2'
    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
    // https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.2'
    // https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.2'
}

application {
    // Define the main class for the application
    mainClassName = 'com.github.wdstar.java.cli.Example'
}

jar {
    manifest {
        attributes 'Manifest-Version': '0.1.0'
        attributes 'Main-Class': 'com.github.wdstar.java.cli.Example'
    }
    
    version '0.1.0'
    // fat jar
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
}

sonarqube {
    properties {
        property "sonar.projectKey", "wdstar_java-cli-example"
        property "sonar.organization", "wdstar"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
